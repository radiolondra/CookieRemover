@page "/CookiesGrid.html"
@using CookieExtension.Models;
@inherits BasePage
@inject IJSRuntime js

@* Cookies Grid in modal *@
<BSModal     
    @ref="Modal" 
    DataId="modal01" 
    IsCentered="true" 
    IsScrollable=true 
    IsStaticBackdrop=false 
    ShowBackdrop=true    
    OnShow="ClearCookieGrid"    
    Size="Size.ExtraLarge">

    <Header>
        <BSContainer>
        <BSRow>
            <BSCol ColumnSmall="8">
                <BSLabel style="color:darkblue"><h5>Browser Cookies</h5></BSLabel>
            </BSCol>
            <BSCol ColumnSmall="4" Align="Align.End">
                <BSLabel><h6>@cc.content @cc.selected</h6></BSLabel>
            </BSCol>            
        </BSRow>
        </BSContainer>
    </Header>

    <Content>
        
        <div class="@BS.Input_Group mb-3">
            <span class="@BS.Input_Group_Text">Custom Filter</span>  
            <BSInput @ref="selectDomain" InputType="InputType.Text" placeholder="Select by domain" Value="cc._customFilter" ValueChanged="(string e) => ExternalFilter(e)" UpdateOnInput="true" />
            <BSButton Target="modal02" Color="BSColor.Primary" IsDisabled="cc._customFilter == string.Empty">Delete</BSButton>
        </div>

        <BSDataTable Items="cc._cookies"
                     TotalItems="cc._count"
                     OnChange="ExternalChange"
                     PaginationTop="true"
                     StartPage="cc._startPage"
                     IsResponsive="true"
                     IsStriped="true"
                     RowsPerPage="cc.ItemsPerPage"
                     Context="item"                     
                     @ref="cc._customFilterRef">

            <Header>
                <BSDataTableHead TValue="CookieItem" Sortable="true" Column="@(nameof(CookieItem.CookieName))">Name</BSDataTableHead>
                <BSDataTableHead TValue="CookieItem" Sortable="true" Column="@(nameof(CookieItem.CookieDomain))">Domain</BSDataTableHead>
                <BSDataTableHead TValue="CookieItem" Sortable="true" Column="@(nameof(CookieItem.CookieExpiryDate))">Expiry Date</BSDataTableHead>
            </Header>

            <NoData>
                <BSLabel style="color:red;">No cookies. Did you click the "Get All Cookies" button?</BSLabel>
            </NoData>

            <Body>
                <BSDataTableRow>
                    <BSTD>
                        @item.CookieName
                    </BSTD>
                    <BSTD>
                        @item.CookieDomain
                    </BSTD>                    
                    <BSTD>
                        @item.CookieExpiryDate
                    </BSTD>                    
                </BSDataTableRow>
            </Body>

        </BSDataTable>

    </Content>

    <Footer>
        <BSButton Target="modal01">Close</BSButton>        
        <BSButton OnClick="ClickGetCookiesHandler" Color="BSColor.Primary">Get All Cookies</BSButton>
    </Footer>

</BSModal>

@* Confirmation modal popup *@
<BSModal     
    @ref="Popup" 
    DataId="modal02" 
    IsCentered="true" 
    IsStaticBackdrop=true 
    ShowBackdrop=true 
    Size="Size.Medium">

    <Header><h5>You are about to remove @cc._count cookies</h5></Header>
    <Content>
        <h6 style="color:red;">Are you sure?</h6>
    </Content>
    <Footer>
        <BSButton Target="modal02">Cancel</BSButton>
        <BSButton OnClick="RemoveCookies" Color="BSColor.Primary">Yes</BSButton>
    </Footer>
</BSModal>


@* The button to show the modal grid *@
<div class="text-center">
<BSRow Align="Align.Center" Padding="Padding.Small">
    <BSCol>
        <BSButton Target="modal01" Color="BSColor.Success">OK, Lets Go!</BSButton>
    </BSCol>
</BSRow>
</div>


@code {

    // ---------------------------------------------------------->>> Parameters
    // Parameters passed by index razor component

    [Parameter]
    public CookiesClass cc { get; set; }

    [Parameter]
    public Action<DataRequest> ExternalChange { get; set; }

    [Parameter]
    public Action<string> ExternalFilter { get; set; }

    [Parameter]
    public EventCallback<int> ExternalGetCookies { get; set; }

    [Parameter]
    public EventCallback<int> ExternalRemoveCookies { get; set; }

    // the modals
    private static BSModal Modal { get; set; } = new BSModal();
    private static BSModal Popup { get; set; } = new BSModal();

    private BSInput<string> selectDomain = new BSInput<string>();

    // ---------------------------------------------------------->>> Functions & Methods

    /// <summary>
    /// Gets the cookies
    /// </summary>
    private async void ClickGetCookiesHandler()
    {
        await cc.ClearGrid();
        await ExternalGetCookies.InvokeAsync(0);

        //content = $"{cc.data.Count()} active cookies";
        StateHasChanged();
    }

    /// <summary>
    /// Starts removing cookies
    /// </summary>
    /// <returns></returns>
    private async Task RemoveCookies()
    {
        await Popup.HideAsync();
        await ExternalRemoveCookies.InvokeAsync(0);
        StateHasChanged();
    }

    private async Task ClearCookieGrid()
    {
        await cc.ClearGrid();
        try
        {
            await selectDomain.Element.Value.FocusAsync();
        }
        catch(Exception ex)
        {
            await js.InvokeVoidAsync("console.log", $"selectDomain error: {ex.Message}");
        }

        StateHasChanged();
    }
}
